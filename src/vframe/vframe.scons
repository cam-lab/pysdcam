#-------------------------------------------------------------------------------
#
#     application build construction script
#
import os
import sys

sys.path.append( '.scons' )

from helpers import *

#-------------------------------------------------------------------------------
#
#     General
#
ProductName = 'vframe'

Import('qtEnv')

env = qtEnv.Clone()
Platform = env['PLATFORM']

CurDir = os.path.abspath(str(Dir('.').srcnode()))
env['CURDIR'] = CurDir

#-------------------------------------------------------------------------------
#
#     Setup sources and target
#
Sources = [ 'vframe.cpp', 'qpipe_cfg.cpp' ]
Target = os.path.join(env['BINDIR'], ProductName)

#-------------------------------------------------------------------------------
#
#     Setup local construction environment
#

DEFINES = ['ENA_FW_QT']

if Platform == 'win32':
    DEFINES += ['BOOST_ALL_NO_LIB']

BOOST_PATH     = os.environ['BOOST_PATH']
PYTHON_VERSION = os.environ['PYTHON_VERSION']
PYTHON_INCLUDE = os.environ['PYTHON_INCLUDE']
PYTHON_LIBPATH = os.environ['PYTHON_LIBPATH']
PYTHON_LIBRARY = os.environ['PYTHON_LIBRARY']


env.Append(CCFLAGS = ['-D'+ d for d in DEFINES] )
env.Append(CPPPATH = [os.path.join(BOOST_PATH, 'include')])
env.Append(CPPPATH = [PYTHON_INCLUDE])
env.Append(LIBPATH = [os.path.join(BOOST_PATH, 'lib')])
env.Append(LIBPATH = [PYTHON_LIBPATH])
env.Append(LIBS = [PYTHON_LIBRARY, 'boost_numpy3', 'boost_python3', 'ip_qpipe'])

env.EnableQt5Modules(['QtCore']) # should be after project libs


env['SHLIBPREFIX'] = ''
if Platform == 'win32':
    env['SHLIBSUFFIX'] = '.pyd'

#-------------------------------------------------------------------------------
#
#     Build the targets
#
env.SharedLibrary( Target, Sources ) 

#-------------------------------------------------------------------------------

